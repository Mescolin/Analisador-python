{"userStory":{"id":268,"what":"to See a list of attendees associated with this Company","who":"AnonymousUser","why":"I know who from this sponsor organization is attending."},"questions":[{"question":{"id":3,"descricao":"Does the user story implementation involve any sensitive transactions, data, or API?"},"done":true,"questoesEspecificas":[{"question":{"id":8,"descricao":"Does the user story implementation involve using any sensitive data or API ?","fk_Questao_Geral_id":3},"done":true,"requirements":[{"descricao":"Verify API URLs do not expose sensitive information, such as the API key, session tokens etc.","id":109,"id_externo":"V13.1.3","fk_Secao_id":61,"fk_Questao_Especifica_id":8,"nivel":"L1","marked":true}]}]},{"question":{"id":5,"descricao":"Does the user story implementation involve input from the client or the environment?"},"done":true,"questoesEspecificas":[{"question":{"id":10,"descricao":"Does the user story implementation involve input from the client or the environment?","fk_Questao_Geral_id":5},"done":true,"requirements":[{"descricao":"Verify that all input (HTML form fields, REST requests, URL parameters, HTTP headers, cookies, batch files, RSS feeds, etc) is validated using positive validation (allow lists). ([C5](https://owasp.org/www-project-proactive-controls/#div-numbering))","id":50,"id_externo":"V5.1.3","fk_Secao_id":33,"fk_Questao_Especifica_id":10,"nivel":"L1","marked":true},{"descricao":"Verify that all untrusted HTML input from WYSIWYG editors or similar is properly sanitized with an HTML sanitizer library or framework feature. ([C5](https://owasp.org/www-project-proactive-controls/#div-numbering))","id":53,"id_externo":"V5.2.1","fk_Secao_id":34,"fk_Questao_Especifica_id":10,"nivel":"L1","marked":true},{"descricao":"Verify that frameworks protect against mass parameter assignment attacks, or that the application has countermeasures to protect against unsafe parameter assignment, such as marking fields private or similar. ([C5](https://owasp.org/www-project-proactive-controls/#div-numbering))","id":49,"id_externo":"V5.1.2","fk_Secao_id":33,"fk_Questao_Especifica_id":10,"nivel":"L1","marked":true},{"descricao":"Verify that structured data is strongly typed and validated against a defined schema including allowed characters, length and pattern (e.g. credit card numbers, e-mail addresses, telephone numbers, or validating that two related fields are reasonable, such as checking that suburb and zip/postcode match). ([C5](https://owasp.org/www-project-proactive-controls/#div-numbering))","id":51,"id_externo":"V5.1.4","fk_Secao_id":33,"fk_Questao_Especifica_id":10,"nivel":"L1","marked":true},{"descricao":"Verify that the application avoids the use of eval() or other dynamic code execution features. Where there is no alternative, any user input being included must be sanitized or sandboxed before being executed.","id":56,"id_externo":"V5.2.4","fk_Secao_id":34,"fk_Questao_Especifica_id":10,"nivel":"L1","marked":true},{"descricao":"Verify that the application has defenses against HTTP parameter pollution attacks, particularly if the application framework makes no distinction about the source of request parameters (GET, POST, cookies, headers, or environment variables).","id":48,"id_externo":"V5.1.1","fk_Secao_id":33,"fk_Questao_Especifica_id":10,"nivel":"L1","marked":true},{"descricao":"Verify that the application protects against SSRF attacks, by validating or sanitizing untrusted data or HTTP file metadata, such as filenames and URL input fields, and uses allow lists of protocols, domains, paths and ports.","id":58,"id_externo":"V5.2.6","fk_Secao_id":34,"fk_Questao_Especifica_id":10,"nivel":"L1","marked":true},{"descricao":"Verify that the application protects against template injection attacks by ensuring that any user input being included is sanitized or sandboxed.","id":57,"id_externo":"V5.2.5","fk_Secao_id":34,"fk_Questao_Especifica_id":10,"nivel":"L1","marked":true},{"descricao":"Verify that the application sanitizes user input before passing to mail systems to protect against SMTP or IMAP injection.","id":55,"id_externo":"V5.2.3","fk_Secao_id":34,"fk_Questao_Especifica_id":10,"nivel":"L1","marked":true},{"descricao":"Verify that the application sanitizes, disables, or sandboxes user-supplied Scalable Vector Graphics (SVG) scriptable content, especially as they relate to XSS resulting from inline scripts, and foreignObject.","id":59,"id_externo":"V5.2.7","fk_Secao_id":34,"fk_Questao_Especifica_id":10,"nivel":"L1","marked":true},{"descricao":"Verify that the application sanitizes, disables, or sandboxes user-supplied scriptable or expression template language content, such as Markdown, CSS or XSL stylesheets, BBCode, or similar.","id":60,"id_externo":"V5.2.8","fk_Secao_id":34,"fk_Questao_Especifica_id":10,"nivel":"L1","marked":true},{"descricao":"Verify that unstructured data is sanitized to enforce safety measures such as allowed characters and length.","id":54,"id_externo":"V5.2.2","fk_Secao_id":34,"fk_Questao_Especifica_id":10,"nivel":"L1","marked":true},{"descricao":"Verify that URL redirects and forwards only allow destinations which appear on an allow list, or show a warning when redirecting to potentially untrusted content.","id":52,"id_externo":"V5.1.5","fk_Secao_id":33,"fk_Questao_Especifica_id":10,"nivel":"L1","marked":true}]}]},{"question":{"id":6,"descricao":"Does the user story implementation involve some output?"},"done":true,"questoesEspecificas":[{"question":{"id":11,"descricao":"Does the user story implementation involve some output?","fk_Questao_Geral_id":6},"done":false,"requirements":[{"descricao":"Verify that context-aware, preferably automated - or at worst, manual - output escaping protects against reflected, stored, and DOM based XSS. ([C4](https://owasp.org/www-project-proactive-controls/#div-numbering))","id":63,"id_externo":"V5.3.3","fk_Secao_id":35,"fk_Questao_Especifica_id":11,"nivel":"L1","marked":true},{"descricao":"Verify that data selection or database queries (e.g. SQL, HQL, ORM, NoSQL) use parameterized queries, ORMs, entity frameworks, or are otherwise protected from database injection attacks. ([C3](https://owasp.org/www-project-proactive-controls/#div-numbering))","id":64,"id_externo":"V5.3.4","fk_Secao_id":35,"fk_Questao_Especifica_id":11,"nivel":"L1","marked":true},{"descricao":"Verify that output encoding is relevant for the interpreter and context required. For example, use encoders specifically for HTML values, HTML attributes, JavaScript, URL parameters, HTTP headers, SMTP, and others as the context requires, especially from untrusted inputs (e.g. names with Unicode or apostrophes, such as ねこ or O'Hara). ([C4](https://owasp.org/www-project-proactive-controls/#div-numbering))","id":61,"id_externo":"V5.3.1","fk_Secao_id":35,"fk_Questao_Especifica_id":11,"nivel":"L1","marked":true},{"descricao":"Verify that output encoding preserves the user's chosen character set and locale, such that any Unicode character point is valid and safely handled. ([C4](https://owasp.org/www-project-proactive-controls/#div-numbering))","id":62,"id_externo":"V5.3.2","fk_Secao_id":35,"fk_Questao_Especifica_id":11,"nivel":"L1","marked":true},{"descricao":"Verify that where parameterized or safer mechanisms are not present, context-specific output encoding is used to protect against injection attacks, such as the use of SQL escaping to protect against SQL injection. ([C3, C4](https://owasp.org/www-project-proactive-controls/#div-numbering))","id":65,"id_externo":"V5.3.5","fk_Secao_id":35,"fk_Questao_Especifica_id":11,"nivel":"L1","marked":true}]}]}],"finished":"2025-04-24T17:47:00.505Z","started":"2025-04-24T17:45:02.795Z"}